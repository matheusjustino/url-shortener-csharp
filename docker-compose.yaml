version: "3"

services:
  app:
    container_name: "app"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ASPNETCORE_URLS: "http://+:80"
      ConnectionStrings__UrlShortenerDb: "Server=db;User Id=SA;Password=password123!;Database=urlShortenerDb;Encrypt=FALSE;"
      ConnectionStrings__UrlShortenerRedis: "redis:6379"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      redisinsight:
        condition: service_healthy
    networks:
      - default_services_network

  db:
    container_name: "url-shortener-database"
    build: ./docker
    ports:
      - "1433:1433"
    healthcheck:
      test: [ "CMD", "bash", "-c", "until (sqlcmd -U SA -P password123! -Q 'SELECT 1') do sleep 1; done" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - default_services_network

  redis:
    image: redis:alpine
    container_name: "url-shortener-redis"
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      - default_services_network
    
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: "url-shortener-redisinsight"
    ports:
      - "8001:8001"
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "redis", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - default_services_network

networks:
  default_services_network:
    name: url-shortener-services
